rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    function isAuthenticated() {
      return request.auth != null;
    }
    function isAdmin() {
      return isAuthenticated() && getRole() == "Admin";
    }
    function isEmployer() {
      return isAuthenticated() && getRole() == "Employer";
    }
    function isJobSeeker() {
      return isAuthenticated() && (getRole() == "Job Seeker" || getRole() == "JobSeeker");
    }

    // Users collection - allow authenticated user to access their own data
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isAdmin(); // Admins can read all users' data
      allow update: if isAdmin(); // Admins can update user data (for deactivation)
    }

    // Resumes collection - allow authenticated user to read/write their own resume
    match /resumes/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isAdmin(); // Admins can read all resumes
    }

    // Jobs collection - only Employers or Admins can write
    match /jobs/{jobId} {
      allow read: if true; // Public read access
      allow write: if isEmployer() || isAdmin();
    }

    // Applications collection - Job Seekers can create, Employers can update status, all authenticated users can read
    match /applications/{appId} {
      allow read: if isAuthenticated() || isAdmin();
      allow create: if isJobSeeker() || isAdmin();
      allow update: if isJobSeeker() || isEmployer() || isAdmin(); // Allow employers to update application status
      allow delete: if isAdmin(); // Only admins can delete applications
      allow list: if isAuthenticated(); // Allow listing for queries
    }

    // Interviews collection - allow employers to create, users to read their own
    match /interviews/{interviewId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        request.auth.uid == resource.data.employerId ||
        isAdmin()
      );
      allow create: if isEmployer() || isAdmin();
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        request.auth.uid == resource.data.employerId ||
        isAdmin()
      );
      allow delete: if isEmployer() || isAdmin();
      allow list: if isAuthenticated(); // Allow listing for queries
    }

    // Exams collection - allow employers to create, users to read their own
    match /exams/{examId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        request.auth.uid == resource.data.employerId ||
        isAdmin()
      );
      allow create: if isEmployer() || isAdmin();
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        request.auth.uid == resource.data.employerId ||
        isAdmin()
      );
      allow delete: if isEmployer() || isAdmin();
      allow list: if isAuthenticated(); // Allow listing for queries
    }

    // Messages collection - allow users to read/write messages they're involved in, and admins to read all
    match /messages/{messageId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.fromUserId ||
        request.auth.uid == resource.data.toUserId
      ) || isAdmin();
      allow create: if isAuthenticated() && (
        request.auth.uid == request.resource.data.fromUserId || isAdmin()
      );
      allow list: if isAuthenticated() || isAdmin();
    }

    // Notifications collection - allow users to read/update their own notifications, admins to create
    match /notifications/{notificationId} {
      allow read, update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAdmin() || (isAuthenticated() && request.auth.uid == request.resource.data.userId);
      allow list: if isAuthenticated(); // Allow listing notifications for the user
    }

    // SavedJobs collection - allow authenticated users to read/write their own saved jobs
    match /savedJobs/{savedJobId} {
      // Allow create with proper userId validation
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      
      // Allow read, update, delete for the owner or admin
      allow read, update, delete: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        isAdmin()
      );
      
      // Allow listing saved jobs for the authenticated user
      allow list: if isAuthenticated();
    }

    // Admin-only collection
    match /adminOnly/{doc} {
      allow read, write: if isAdmin();
    }

    // AdminSettings collection - only admins can access
    match /adminSettings/{doc} {
      allow read, write: if isAdmin();
    }

    // Feedback collection - allow write for authenticated users only
    match /feedback/{feedbackId} {
      allow read: if isAdmin(); // Only Admin can read feedback
      allow write: if isAuthenticated(); // Only authenticated users can write feedback
      
      // Replies subcollection - only admins can read/write replies
      match /replies/{replyId} {
        allow read, write: if isAdmin();
      }
    }

    // Catch-all rule - only Admins can read/write to other collections
    match /{document=**} {
      allow read: if isAdmin();
      allow write: if false; // Prevent writes to other documents unless explicitly allowed
    }
  }
} 